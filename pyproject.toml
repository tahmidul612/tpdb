[project]
name = "tpdb"
version = "0.4.0"
description = "Plex Poster Organizer is a powerful Python utility designed to streamline the management of movie and TV show posters for your Plex media server. It helps you download, organize, and sync posters from ThePosterDB (TPDb), preparing them for use with metadata managers like [Kometa](https://kometa.wiki/) (formerly Plex Meta Manager) or for direct use within your media library."
authors = [
    { name = "Tahmidul Islam", email = "me@tahmidul612.com" },
]
license = { text = "MIT" }
readme = "README.md"
requires-python = ">=3.10"
dependencies = [
    "plexapi>=4.17.1",
    "pyrfc6266>=1.0.2",
    "rapidfuzz>=3.0.0",
    "requests>=2.32.5",
    "typer[all]>=0.15.1",
    "rich>=13.9.4",
]

[dependency-groups]
dev = [
    "commitizen>=4.9.1",
    "detect-secrets>=1.5.0",
    "pre-commit>=4.3.0",
    "pytest>=8.3.4",
    "ruff>=0.14.2",
]

[project.scripts]
tpdb = "tpdb.cli:main"

[build-system]
requires = ["uv_build>=0.9.4,<0.10.0"]
build-backend = "uv_build"

[tool.ruff]
# Exclude a variety of commonly ignored directories.
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".ipynb_checkpoints",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pyenv",
    ".pytest_cache",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    ".vscode",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "site-packages",
    "venv",
]

# Same as Black.
line-length = 88
indent-width = 4

# Assume Python 3.10
target-version = "py310"

[tool.ruff.lint]
# Enable Pyflakes (`F`) and a subset of the pycodestyle (`E`) codes by default.
# Unlike Flake8, Ruff doesn't enable pycodestyle warnings (`W`) or
# McCabe complexity (`C901`) by default.
select = ["E4", "E7", "E9", "F"]
ignore = []

# Allow fix for all enabled rules (when `--fix`) is provided.
fixable = ["ALL"]
unfixable = []

# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

[tool.ruff.format]
# Like Black, use double quotes for strings.
quote-style = "double"

# Like Black, indent with spaces, rather than tabs.
indent-style = "space"

# Like Black, respect magic trailing commas.
skip-magic-trailing-comma = false

# Like Black, automatically detect the appropriate line ending.
line-ending = "lf"

# Enable auto-formatting of code examples in docstrings. Markdown,
# reStructuredText code/literal blocks and doctests are all supported.
#
# This is currently disabled by default, but it is planned for this
# to be opt-out in the future.
docstring-code-format = true

# Set the line length limit used when formatting code snippets in
# docstrings.
#
# This only has an effect when the `docstring-code-format` setting is
# enabled.
docstring-code-line-length = "dynamic"

[tool.commitizen]
name = "cz_conventional_commits"
tag_format = "v$version"
version_scheme = "semver2"
version_provider = "uv"
update_changelog_on_bump = true
major_version_zero = true
annotated_tag = true
gpg_sign = false
pre_bump_hooks = [
    "uv lock",
    "git add uv.lock",
]
